// Carga de la imagen Skysat
// var img = ee.Image('projects/ACCA-SERVIR/Colaboraton/Skysat_Pandishari');
var img = ee.Image('projects/ACCA-SERVIR/Colaboraton/Skysat_CordilleraAzul');

// Definir parámetros de visualización
var visParams = {
  bands: ['b3', 'b2', 'b1'],
  min: 0,
  max: 300
};

// Añadir la imagen original al mapa
Map.addLayer(img, visParams, 'Skysat Image');

// Añadir el índice NDVI
var img = img.addBands(img.expression(
  '(NIR - RED) / (NIR + RED)', {
    'NIR': img.select('b4'),
    'RED': img.select('b3')
  }).rename('ndvi'));

// Función para normalizar la imagen
function normalizationImg (img, bands, min, max) {
  var desMin = ee.Number(min);
  var desMax = ee.Number(max);
  var strMin = ee.String('_min');
  var strMax = ee.String('_max');
  var bandNorm = bands.map(function (band){
    var selectedBand = ee.Image(img).select(band);
    var bandStats = selectedBand.reduceRegion({
      reducer: ee.Reducer.minMax(),
      geometry: ee.Image(img).geometry(),
      scale: ee.Image(img).projection().nominalScale(),
      crs: ee.Image(img).projection(),
      maxPixels: 1e10
    });
    var bandString = ee.String(band);
    var bandMinString = bandString.cat(strMin);
    var bandMaxString = bandString.cat(strMax);
    var bandMin = ee.Number(bandStats.get(bandMinString));
    var bandMax = ee.Number(bandStats.get(bandMaxString));
    
    var bandNormalized = selectedBand.subtract(bandMin).multiply(
      desMax.subtract(desMin).divide(
        bandMax.subtract(bandMin)))
        .add(desMin).rename(bandString.cat(ee.String('_normalized')));
    
    return bandNormalized.toFloat();
  });
  return img.addBands(bandNorm);
};

// Bandas a utilizar
var bands = ['b1_normalized', 'b2_normalized', 'b3_normalized', 'b4_normalized', 'ndvi'];

// Normalización y selección de imágenes
var processed = normalizationImg(img, ['b1', 'b2', 'b3', 'b4'], 0, 1)
  .select(bands);

// Definición de variables del modelo
var project = 'deeplearning-306718'; 
var model_name = 'colaboraton_logging';
var version_name = 'v1';

// Carga del modelo
var model = ee.Model.fromAiPlatformPredictor({
    projectName: project,
    modelName: model_name,
    version: version_name,
    inputTileSize: [64,64],
    proj: ee.Projection('EPSG:32718').atScale(0.5),
    fixInputProj: true,
    inputShapes: {
      'array': [5]
    },
    outputBands: {'class': {
        'type': ee.PixelType.float(),
        'dimensions': 1
      }
    }
}); 

// Realizar predicciones del modelo
var predictions = model.predictImage(processed.toArray()).arrayFlatten([["class"]]).toFloat();

// Añadir las predicciones al lienzo
Map.addLayer(predictions, {bands: ['class'], min: 0, max: 1, palette: ['blue', 'green', 'red']}, 'Predictions');
Map.centerObject(img);

// Código para exportar los resultados
Export.image.toAsset({
  image: predictions,
  description: 'Skysat_prediction',
  assetId: 'projects/ACCA-SERVIR/Colaboraton/' + 'Skysat_prediction',
  region: img.geometry(),
  scale: 0.5,
  crs: 'EPSG: 32719',
  maxPixels: 1e12
});
